// 키 바인딩을 이 파일에 넣어서 기본값 재정의
[
    // 열려있는 버퍼에서 탐색
    {
        "key": "space space",
        "command": "workbench.action.showAllEditorsByMostRecentlyUsed",
        "when": "editorTextFocus && neovim.mode == 'normal'"
    },
    // 파일 검색
    {
        "key": "ctrl+p",
        "command": "-television.ToggleFileFinder"
    },
    {
        "key": "space s f",
        "command": "television.ToggleFileFinder",
        "when": "editorTextFocus && neovim.mode == 'normal'"
    },
    // Text Grep
    {
        "key": "ctrl+shift+f",
        "command": "-television.ToggleTextFinder"
    },
    {
        "key": "space s g",
        "command": "television.ToggleTextFinder",
        "when": "editorTextFocus && neovim.mode == 'normal'"
    },
    // Lazygit
    {
        "key": "cmd+g g",
        "command": "-lazygit.openLazygit"
    },
    {
        "key": "space l g",
        "command": "lazygit.openLazygit",
        "when": "editorTextFocus && neovim.mode == 'normal'"
    },
    // Quick fix (Code action)
    {
        "key": "space c a",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !textCompareEditorActive && neovim.mode != 'insert'"
    },
    {
        "key": "cmd+.",
        "command": "-editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    // Revert
    {
        "key": "space h r",
        "command": "git.revertSelectedRanges",
        "when": "editorTextFocus && !operationInProgress && resourceScheme == 'file' && neovim.mode != 'insert'"
    },
    {
        "key": "cmd+k cmd+r",
        "command": "-git.revertSelectedRanges",
        "when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'"
    },
    // Problems
    {
        "key": "space q",
        "command": "workbench.action.problems.focus",
        "when": "editorTextFocus && neovim.mode == 'normal'"
    },
    // Tab navigation
    {
        "key": "alt+cmd+right",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "] b",
        "command": "workbench.action.nextEditor",
        "when": "editorTextFocus && neovim.mode != 'insert'"
    },
    {
        "key": "alt+cmd+left",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "[ b",
        "command": "workbench.action.previousEditor",
        "when": "editorTextFocus && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+j",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && neovim.mode == 'insert' && !suggestWidgetVisible"
    },
    {
        "key": "cmd+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && neovim.mode != 'insert' && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.debug.prevConsole",
        "when": "inDebugRepl"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "shift+cmd+[",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.debug.nextConsole",
        "when": "inDebugRepl"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "shift+cmd+]",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "alt+cmd+b",
        "command": "-workbench.action.toggleAuxiliaryBar"
    },
    // References 다음, 이전
    {
        "key": "] r",
        "command": "references-view.next",
        "when": "reference-list.hasResult && references-view.canNavigate && neovim.mode != 'insert'"
    },
    {
        "key": "f4",
        "command": "-references-view.next",
        "when": "reference-list.hasResult && references-view.canNavigate"
    },
    {
        "key": "[ r",
        "command": "references-view.prev",
        "when": "reference-list.hasResult && references-view.canNavigate && neovim.mode != 'insert'"
    },
    {
        "key": "shift+f4",
        "command": "-references-view.prev",
        "when": "reference-list.hasResult && references-view.canNavigate"
    },
    // Hierarchy
    {
        "key": "space g h",
        "command": "references-view.showCallHierarchy",
        "when": "editorHasCallHierarchyProvider"
    },
    {
        "key": "shift+alt+h",
        "command": "-references-view.showCallHierarchy",
        "when": "editorHasCallHierarchyProvider"
    },
    // Diagnostics
    {
        "key": "] q",
        "command": "editor.action.marker.next",
        "when": "editorFocus && neovim.mode != 'insert'"
    },
    {
        "key": "alt+f8",
        "command": "-editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "[ q",
        "command": "editor.action.marker.prev",
        "when": "editorFocus && neovim.mode != 'insert'"
    },
    {
        "key": "shift+alt+f8",
        "command": "-editor.action.marker.prev",
        "when": "editorFocus"
    },
    // Search
    {
        "key": "] s",
        "command": "search.action.focusNextSearchResult",
        "when": "(hasSearchResult || inSearchEditor) && neovim.mode != 'insert'"
    },
    {
        "key": "f4",
        "command": "-search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "[ s",
        "command": "search.action.focusPreviousSearchResult",
        "when": "(hasSearchResult || inSearchEditor) && neovim.mode != 'insert'"
    },
    {
        "key": "shift+f4",
        "command": "-search.action.focusPreviousSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    // Changes
    {
        "key": "] c",
        "command": "workbench.action.editor.nextChange",
        "when": "editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0' && neovim.mode != 'insert'"
    },
    {
        "key": "alt+f5",
        "command": "-workbench.action.editor.nextChange",
        "when": "editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0'"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.editor.previousChange",
        "when": "editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0'"
    },
    {
        "key": "[ c",
        "command": "workbench.action.editor.previousChange",
        "when": "editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0' && neovim.mode != 'insert'"
    },
    // Git status
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "space g s",
        "command": "workbench.view.scm",
        "when": "editorTextFocus && neovim.mode == 'normal'"
    },
    // File explorer
    {
        "key": "space e",
        "command": "workbench.view.explorer",
        "when": "editorTextFocus && neovim.mode == 'normal'"
    },
    {
        "key": "shift+cmd+e",
        "command": "-workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    // Hide file explorer when focus on explorer
    {
        "key": "space e",
        "command": "-workbench.action.closeSidebar",
        "when": "filesExplorerFocus"
    },
    // Diff changes
    {
        "key": "alt+f5",
        "command": "-workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "] c",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "shift+alt+f5",
        "command": "-workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    {
        "key": "[ c",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible"
    },
    // Rename symbol
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "space g r n",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly && neovim.mode == 'normal'"
    },
    // Esc: clear vscode-neovim search results (highlight)
    {
        "key": "escape",
        "command": "vscode-neovim.send",
        "when": "editorTextFocus && neovim.mode != insert",
        "args": ":nohl<cr>"
    },
    // Open vscode neovim config file
    {
        "key": "space c e",
        "command": "vscode-neovim.send",
        "when": "editorTextFocus && neovim.mode == 'normal'",
        "args": ":e ~/.config/nvim/lua/vscode-neovim/config.lua<cr>"
    },
    // Document symbol
    {
        "key": "space d s",
        "command": "workbench.action.gotoSymbol",
        "when": "!accessibilityHelpIsShown && !accessibleViewIsShown && editorTextFocus && neovim.mode == 'normal'"
    },
    {
        "key": "shift+cmd+o",
        "command": "-workbench.action.gotoSymbol",
        "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
    },
    // Workspace symbol
    {
        "key": "space w s",
        "command": "workbench.action.showAllSymbols",
        "when": "!accessibilityHelpIsShown && !accessibleViewIsShown && editorTextFocus && neovim.mode == 'normal'"
    },
    {
        "key": "cmd+t",
        "command": "-workbench.action.showAllSymbols"
    },
]